apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "hmcts.ccddi.releaseName" . }}
  labels:
    {{- ( include "ccddi.labels" . ) | indent 4 }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "5"
    helm.sh/hook-delete-policy: "{{ if .Values.debug }}before-hook-creation{{ else }}hook-succeeded{{ end}}"
spec:
  template:
    metadata:
      name: {{ template "hmcts.ccddi.releaseName" . }}
      labels:
        {{- ( include "ccddi.labels" . ) | indent 8 }}
    spec:
      {{- if and .Values.keyVaults .Values.global.enableKeyVaults }}
      volumes:
        {{- $globals := .Values.global }}
        {{- $aadIdentityName := .Values.aadIdentityName }}
        {{- range $key, $value := .Values.keyVaults }}
        - name: vault-{{ $key }}
          csi:
            driver: "secrets-store.csi.k8s.io"
            readOnly: true
            volumeAttributes:
              secretProviderClass: vault-ccd
        {{- end }}
      {{- end }}
      containers:
        - name: {{ template "hmcts.ccddi.releaseName" . }}
          image: {{ .Values.image }}
          imagePullPolicy: IfNotPresent
          {{- if and .Values.keyVaults .Values.global.enableKeyVaults }}
          volumeMounts:
            {{- range $key, $value := .Values.keyVaults }}
              - name: vault-{{ $key }}
                mountPath: /mnt/secrets/{{ $key }}
                readOnly: true
            {{- end }}
          {{- end }}
          env:
          {{- (include "ccddi.secrets" .) | indent 10 }}
          - name: CCD_DEF_URLS
            value: {{ join "," .Values.definitions | quote }}
          - name: CCD_DEF_FILENAME
            value: {{ .Values.definitionFilename | quote }}
          - name: WAIT_HOSTS
            value: {{ .Values.waitHosts | quote }}
          - name: WAIT_HOSTS_TIMEOUT
            value: {{ .Values.waitHostsTimeout | quote }}
          - name: CREATE_IMPORTER_USER
            value: "false"
          {{- if and .Values.keyVaults .Values.global.enableKeyVaults }}
          - name: IMPORTER_SECRETS_MOUNT
            value: '/mnt/secrets/ccd'
          {{- end }}
          - name: IDAM_URI
            value: {{ tpl .Values.idamApiUrl $ }}
          - name: REDIRECT_URI  
            value: {{ tpl .Values.redirectUri $ }}
          - name: CLIENT_ID
            value: {{ tpl .Values.idamClientId $ }}
          - name: USER_ROLES
            value: {{ join "," .Values.userRoles }}
          - name: MICROSERVICE_BASE_URL
            value: http://{{ .Values.ingressHost }}
          - name: AUTH_PROVIDER_BASE_URL
            value: {{ tpl .Values.s2sUrl $ }}
          - name: MICROSERVICE
            value: {{ .Values.microservice }}
          - name: CCD_STORE_BASE_URL
            value: {{ tpl .Values.definitionStoreUrl $ }}
          - name: VERBOSE
            value: {{ .Values.verbose | quote }}
          {{- (include "ccddi.environment" .) | indent 10 }}
          resources:
            requests:
              memory: {{ .Values.memoryRequests }}
              cpu: {{ .Values.cpuRequests }}
            limits:
              memory: {{ .Values.memoryLimits }}
              cpu: {{ .Values.cpuLimits }}
      restartPolicy: Never
