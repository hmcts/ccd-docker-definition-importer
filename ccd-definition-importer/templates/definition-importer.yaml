apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "hmcts.ccddi.releaseName" . }}
  labels:
    {{- ( include "ccddi.labels" . ) | indent 4 }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: before-hook-creation  # Move to hook-succeeded after first charts are done 
spec:
  template:
    metadata:
      name: {{ template "hmcts.ccddi.releaseName" . }}
      labels:
        {{- ( include "ccddi.labels" . ) | indent 4 }}
    spec:
      {{- if and .Values.keyVaults .Values.global.enableKeyVaults }}
      volumes:
        {{- $globals := .Values.global }}
        {{- $aadIdentityName := .Values.aadIdentityName }}
        {{- range $key, $value := .Values.keyVaults }}
        - name: vault-{{ $key }}
          flexVolume:
            driver: "azure/kv"
            {{- if not $aadIdentityName }}
            secretRef:
              name: {{ default "kvcreds" $value.secretRef }}
            {{- end }}
            options:
              usepodidentity: "{{ if $aadIdentityName }}true{{ else }}false{{ end}}"
              tenantid: {{ $globals.tenantId }}
              keyvaultname: {{if $value.excludeEnvironmentSuffix }}{{ $key | quote }}{{else}}{{ printf "%s-%s" $key $globals.environment }}{{ end }}
              keyvaultobjectnames: {{ $value.secrets | join ";" | quote }}  #"some-username;some-password"
              keyvaultobjecttypes: {{ trimSuffix ";" (repeat (len $value.secrets) "secret;") | quote }} # OPTIONS: secret, key, cert
        {{- end }}
      {{- end }}
      containers:
        - name: {{ template "hmcts.ccddi.releaseName" . }}
          image: {{ .Values.image }} 
          imagePullPolicy: IfNotPresent
          {{- if and .Values.keyVaults .Values.global.enableKeyVaults }}
          volumeMounts:
            {{- range $key, $value := .Values.keyVaults }}
              - name: vault-{{ $key }}
                mountPath: /mnt/secrets/{{ $key }}
                readOnly: true
            {{- end }}
          {{- end }}
          env:
          - name: CCD_DEF_URLS
            value: {{ join "," .Values.definitions | quote }}
          - name: CCD_DEF_FILENAME
            value: {{ .Values.definitionFilename | quote }}
          - name: WAIT_HOSTS
            value: {{ .Values.waitHosts | quote }}
          - name: WAIT_HOSTS_TIMEOUT
            value: {{ .Values.waitHostsTimeout | quote }}
          - name: CREATE_IMPORTER_USER
            value: "false"
          {{- if .Values.importerFromSecret }}
          - name: IMPORTER_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.importerUsername.secretKeyRefName | quote }}
                key: {{ .Values.importerUsername.secretKeyRefKey | quote }}
          {{- else }}
          - name: IMPORTER_USERNAME
            value: {{ .Values.importerUsername.value | quote }}
          {{- end }} 
          {{- if .Values.importerFromSecret }}
          - name: IMPORTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.importerPassword.secretKeyRefName | quote }}
                key: {{ .Values.importerPassword.secretKeyRefKey | quote }}
          {{- else }}
          - name: IMPORTER_PASSWORD
            value: {{ .Values.importerPassword.value | quote }}
          {{- end }}
          - name: IDAM_URI
            value: {{ tpl .Values.idamApiUrl $ }}
          - name: REDIRECT_URI  
            value: {{ tpl .Values.redirectUri $ }}
          - name: CLIENT_ID
            value: 'ccd_gateway'
          {{- if .Values.apiGateway.idamClientSecret.fromSecret }}
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Values.apiGateway.idamClientSecret.secretKeyRefName | quote }}
                key: {{ .Values.apiGateway.idamClientSecret.secretKeyRefKey | quote }}
          {{- else }}
          - name: CLIENT_SECRET
            value: {{ .Values.apiGateway.idamClientSecret.value | quote }}
          {{- end }} 
          - name: USER_ROLES
            value: {{ join "," .Values.userRoles }}
          - name: MICROSERVICE_BASE_URL
            value: http://{{ .Values.ingressHost }}
          - name: AUTH_PROVIDER_BASE_URL
            value: {{ tpl .Values.s2sUrl $ }}
          - name: MICROSERVICE
            value: {{ .Values.microservice }}
          - name: CCD_STORE_BASE_URL
            value: {{ tpl .Values.definitionStoreUrl $ }}
          - name: VERBOSE
            value: {{ .Values.verbose | quote }}
          resources:
            requests:
              memory: {{ .Values.memoryRequests }}
              cpu: {{ .Values.cpuRequests }}
            limits:
              memory: {{ .Values.memoryLimits }}
              cpu: {{ .Values.cpuLimits }}
      restartPolicy: Never